{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/chat-service/chat-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../ws (ignored)","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 115;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 115\n// module chunks = 2","var map = {\n\t\"../pages/chat/chat.module\": [\n\t\t306,\n\t\t1\n\t],\n\t\"../pages/home/home.module\": [\n\t\t307,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 157;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 157\n// module chunks = 2","import { Injectable } from '@angular/core';\n// import { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class ChatService {\n\n  private URL = 'http://localhost:8080';\n  private socket;\n\n  constructor() {\n    console.log('Hello ChatServiceProvider Provider');\n  }\n\n  sendMessage(message) {\n    this.socket.emit('add-message', message);\n    console.log(\"MESSAGE SENT\");\n  }\n\n  getMessages() {\n    let observable = new Observable(observer => {\n      this.socket = io(this.URL);\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      }\n    });\n    return observable;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-service/chat-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { ChatService } from '../providers/chat-service/chat-service';\n\n@NgModule({\n  declarations: [\n    MyApp\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ChatService\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 277\n// module chunks = 2","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = 'HomePage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}